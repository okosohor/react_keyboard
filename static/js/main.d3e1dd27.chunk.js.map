{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleDocumentClick","event","setState","key","document","addEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,MAFhB,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASC,iBAAiB,QAASC,KAAKN,uBAV5C,oBAiBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEKD,KAAKR,MAAMC,WAAZ,mCAEgCO,KAAKR,MAAMC,WAF3C,KACI,kCAvBhB,GAAyBS,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.d3e1dd27.chunk.js","sourcesContent":["import React from 'react';\n\ntype State =\n{\n  pressedKey: string | null,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleDocumentClick);\n  }\n\n  componentWillUnmount(): void {\n    document.addEventListener('keyup', this.handleDocumentClick);\n  }\n\n  handleDocumentClick = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            !this.state.pressedKey\n              ? 'Nothing was pressed yet'\n              : `The last pressed key is [${this.state.pressedKey}]`\n          }\n        </p>\n      </div>\n    );\n  }\n}\n\n// render() {\n//   return (\n//     <div className=\"App\">\n//       <p className=\"App__message\">The last pressed key is [Enter]</p>\n//     </div>\n//   );\n// }\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}